--------------------------------------------------------
--  File created - Saturday-June-28-2025   
--------------------------------------------------------
DROP SEQUENCE "BANKING_SYSTEM"."SEQ_ACCOUNTS";
DROP SEQUENCE "BANKING_SYSTEM"."SEQ_BANKS";
DROP SEQUENCE "BANKING_SYSTEM"."SEQ_CUSTOMERS";
DROP SEQUENCE "BANKING_SYSTEM"."SEQ_LEDGER_ENTRIES";
DROP SEQUENCE "BANKING_SYSTEM"."SEQ_TICKETS";
DROP SEQUENCE "BANKING_SYSTEM"."SEQ_TRANSACTIONS";
DROP TABLE "BANKING_SYSTEM"."ACCOUNTS" cascade constraints;
DROP TABLE "BANKING_SYSTEM"."BANKS" cascade constraints;
DROP TABLE "BANKING_SYSTEM"."CUSTOMERS" cascade constraints;
DROP TABLE "BANKING_SYSTEM"."LEDGER_ENTRIES" cascade constraints;
DROP TABLE "BANKING_SYSTEM"."TICKETS" cascade constraints;
DROP TABLE "BANKING_SYSTEM"."TRANSACTIONS" cascade constraints;
--------------------------------------------------------
--  DDL for Sequence SEQ_ACCOUNTS
--------------------------------------------------------

   CREATE SEQUENCE  "BANKING_SYSTEM"."SEQ_ACCOUNTS"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence SEQ_BANKS
--------------------------------------------------------

   CREATE SEQUENCE  "BANKING_SYSTEM"."SEQ_BANKS"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence SEQ_CUSTOMERS
--------------------------------------------------------

   CREATE SEQUENCE  "BANKING_SYSTEM"."SEQ_CUSTOMERS"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence SEQ_LEDGER_ENTRIES
--------------------------------------------------------

   CREATE SEQUENCE  "BANKING_SYSTEM"."SEQ_LEDGER_ENTRIES"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence SEQ_TICKETS
--------------------------------------------------------

   CREATE SEQUENCE  "BANKING_SYSTEM"."SEQ_TICKETS"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence SEQ_TRANSACTIONS
--------------------------------------------------------

   CREATE SEQUENCE  "BANKING_SYSTEM"."SEQ_TRANSACTIONS"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Table ACCOUNTS
--------------------------------------------------------

  CREATE TABLE "BANKING_SYSTEM"."ACCOUNTS" 
   (	"ACCOUNT_ID" NUMBER, 
	"CUSTOMER_ID" NUMBER, 
	"ACCOUNT_NUMBER" VARCHAR2(20 BYTE), 
	"BANK_ID" NUMBER, 
	"ACCOUNT_TYPE" VARCHAR2(20 BYTE), 
	"OPENING_BALANCE" NUMBER(15,2), 
	"CACHED_BALANCE" NUMBER(15,2), 
	"STATUS" VARCHAR2(20 BYTE) DEFAULT 'ACTIVE', 
	"CREATED_AT" TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP, 
	"UPDATED_AT" TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table BANKS
--------------------------------------------------------

  CREATE TABLE "BANKING_SYSTEM"."BANKS" 
   (	"BANK_ID" NUMBER, 
	"BANK_NAME" VARCHAR2(100 BYTE), 
	"IFSC_CODE" VARCHAR2(11 BYTE), 
	"BRANCH" VARCHAR2(100 BYTE), 
	"ADDRESS" CLOB
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" 
 LOB ("ADDRESS") STORE AS SECUREFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW 4000 CHUNK 8192
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 262144 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table CUSTOMERS
--------------------------------------------------------

  CREATE TABLE "BANKING_SYSTEM"."CUSTOMERS" 
   (	"CUSTOMER_ID" NUMBER, 
	"FULL_NAME" VARCHAR2(50 BYTE), 
	"EMAIL" VARCHAR2(255 BYTE), 
	"PASSWORD_HASH" VARCHAR2(255 BYTE), 
	"PHONE" VARCHAR2(20 BYTE), 
	"ADDRESS" CLOB, 
	"STATUS" VARCHAR2(20 BYTE) DEFAULT 'ACTIVE', 
	"CREATED_AT" TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP, 
	"UPDATED_AT" TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" 
 LOB ("ADDRESS") STORE AS SECUREFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW 4000 CHUNK 8192
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 262144 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table LEDGER_ENTRIES
--------------------------------------------------------

  CREATE TABLE "BANKING_SYSTEM"."LEDGER_ENTRIES" 
   (	"ENTRY_ID" NUMBER, 
	"TRANSACTION_ID" NUMBER, 
	"ACCOUNT_ID" NUMBER, 
	"ENTRY_TYPE" VARCHAR2(10 BYTE), 
	"AMOUNT" NUMBER(15,2) DEFAULT 0.00, 
	"REMARKS" VARCHAR2(255 BYTE), 
	"CREATED_AT" TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table TICKETS
--------------------------------------------------------

  CREATE TABLE "BANKING_SYSTEM"."TICKETS" 
   (	"TICKET_ID" NUMBER, 
	"CUSTOMER_ID" NUMBER, 
	"TICKET_TYPE" VARCHAR2(50 BYTE), 
	"DESCRIPTION" CLOB, 
	"STATUS" VARCHAR2(20 BYTE) DEFAULT 'PENDING', 
	"CREATED_AT" TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP, 
	"UPDATED_AT" TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  TABLESPACE "USERS" 
 LOB ("DESCRIPTION") STORE AS SECUREFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW 4000 CHUNK 8192
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES ) ;
--------------------------------------------------------
--  DDL for Table TRANSACTIONS
--------------------------------------------------------

  CREATE TABLE "BANKING_SYSTEM"."TRANSACTIONS" 
   (	"TRANSACTION_ID" NUMBER, 
	"TRANSACTION_TYPE" VARCHAR2(20 BYTE), 
	"FROM_ACCOUNT_ID" NUMBER, 
	"TO_ACCOUNT_ID" NUMBER, 
	"AMOUNT" NUMBER(15,2), 
	"REMARKS" VARCHAR2(255 BYTE), 
	"STATUS" VARCHAR2(20 BYTE) DEFAULT 'COMPLETED', 
	"CREATED_AT" TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
REM INSERTING into BANKING_SYSTEM.ACCOUNTS
SET DEFINE OFF;
Insert into BANKING_SYSTEM.ACCOUNTS (ACCOUNT_ID,CUSTOMER_ID,ACCOUNT_NUMBER,BANK_ID,ACCOUNT_TYPE,OPENING_BALANCE,CACHED_BALANCE,STATUS,CREATED_AT,UPDATED_AT) values (1,1,'SBIN0001001',1,'SAVINGS',0,4200,'ACTIVE',to_timestamp('28-06-25 12:54:47.486000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('28-06-25 12:54:47.486000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'));
Insert into BANKING_SYSTEM.ACCOUNTS (ACCOUNT_ID,CUSTOMER_ID,ACCOUNT_NUMBER,BANK_ID,ACCOUNT_TYPE,OPENING_BALANCE,CACHED_BALANCE,STATUS,CREATED_AT,UPDATED_AT) values (2,2,'HDFC0002002',2,'CHECKING',0,4300,'ACTIVE',to_timestamp('28-06-25 12:54:47.492000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('28-06-25 12:54:47.492000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'));
Insert into BANKING_SYSTEM.ACCOUNTS (ACCOUNT_ID,CUSTOMER_ID,ACCOUNT_NUMBER,BANK_ID,ACCOUNT_TYPE,OPENING_BALANCE,CACHED_BALANCE,STATUS,CREATED_AT,UPDATED_AT) values (3,3,'ICIC0003003',3,'SAVINGS',0,3500,'ACTIVE',to_timestamp('28-06-25 12:54:47.497000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('28-06-25 12:54:47.497000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'));
Insert into BANKING_SYSTEM.ACCOUNTS (ACCOUNT_ID,CUSTOMER_ID,ACCOUNT_NUMBER,BANK_ID,ACCOUNT_TYPE,OPENING_BALANCE,CACHED_BALANCE,STATUS,CREATED_AT,UPDATED_AT) values (4,4,'PNB0004004',4,'SAVINGS',0,5500,'ACTIVE',to_timestamp('28-06-25 12:54:47.501000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('28-06-25 12:54:47.501000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'));
Insert into BANKING_SYSTEM.ACCOUNTS (ACCOUNT_ID,CUSTOMER_ID,ACCOUNT_NUMBER,BANK_ID,ACCOUNT_TYPE,OPENING_BALANCE,CACHED_BALANCE,STATUS,CREATED_AT,UPDATED_AT) values (5,5,'AXIS0005005',5,'SAVINGS',0,7500,'ACTIVE',to_timestamp('28-06-25 12:54:47.505000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('28-06-25 12:54:47.505000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'));
REM INSERTING into BANKING_SYSTEM.BANKS
SET DEFINE OFF;
Insert into BANKING_SYSTEM.BANKS (BANK_ID,BANK_NAME,IFSC_CODE,BRANCH) values (1,'State Bank of India','SBIN0000456','Mumbai Main');
Insert into BANKING_SYSTEM.BANKS (BANK_ID,BANK_NAME,IFSC_CODE,BRANCH) values (2,'HDFC Bank','HDFC0001234','Delhi Connaught');
Insert into BANKING_SYSTEM.BANKS (BANK_ID,BANK_NAME,IFSC_CODE,BRANCH) values (3,'ICICI Bank','ICIC0000789','Bangalore Central');
Insert into BANKING_SYSTEM.BANKS (BANK_ID,BANK_NAME,IFSC_CODE,BRANCH) values (4,'Axis Bank','UTIB0000567','Chennai T Nagar');
Insert into BANKING_SYSTEM.BANKS (BANK_ID,BANK_NAME,IFSC_CODE,BRANCH) values (5,'Punjab National Bank','PUNB0012345','Kolkata Park Street');
REM INSERTING into BANKING_SYSTEM.CUSTOMERS
SET DEFINE OFF;
Insert into BANKING_SYSTEM.CUSTOMERS (CUSTOMER_ID,FULL_NAME,EMAIL,PASSWORD_HASH,PHONE,STATUS,CREATED_AT,UPDATED_AT) values (1,'Amit Sharma','amit.sharma@example.com','amit123','9876543210','ACTIVE',to_timestamp('28-06-25 12:53:49.963000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('28-06-25 12:53:49.963000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'));
Insert into BANKING_SYSTEM.CUSTOMERS (CUSTOMER_ID,FULL_NAME,EMAIL,PASSWORD_HASH,PHONE,STATUS,CREATED_AT,UPDATED_AT) values (2,'Sneha Verma','sneha.verma@example.com','sneha456','9812345678','ACTIVE',to_timestamp('28-06-25 12:53:49.970000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('28-06-25 12:53:49.970000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'));
Insert into BANKING_SYSTEM.CUSTOMERS (CUSTOMER_ID,FULL_NAME,EMAIL,PASSWORD_HASH,PHONE,STATUS,CREATED_AT,UPDATED_AT) values (3,'Rajeev Menon','rajeev.menon@example.com','rajeev789','9123456789','INACTIVE',to_timestamp('28-06-25 12:53:49.976000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('28-06-25 12:53:49.976000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'));
Insert into BANKING_SYSTEM.CUSTOMERS (CUSTOMER_ID,FULL_NAME,EMAIL,PASSWORD_HASH,PHONE,STATUS,CREATED_AT,UPDATED_AT) values (4,'Priya Das','priya.das@example.com','priya321','9001234567','ACTIVE',to_timestamp('28-06-25 12:53:49.981000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('28-06-25 12:53:49.981000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'));
Insert into BANKING_SYSTEM.CUSTOMERS (CUSTOMER_ID,FULL_NAME,EMAIL,PASSWORD_HASH,PHONE,STATUS,CREATED_AT,UPDATED_AT) values (5,'Farhan Khan','farhan.khan@example.com','farhan654','9898989898','SUSPENDED',to_timestamp('28-06-25 12:53:49.985000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('28-06-25 12:53:49.985000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'));
Insert into BANKING_SYSTEM.CUSTOMERS (CUSTOMER_ID,FULL_NAME,EMAIL,PASSWORD_HASH,PHONE,STATUS,CREATED_AT,UPDATED_AT) values (6,'Neha Mehta','neha.mehta@example.com','neha987','9112233445','ACTIVE',to_timestamp('28-06-25 12:53:49.989000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('28-06-25 12:53:49.989000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'));
REM INSERTING into BANKING_SYSTEM.LEDGER_ENTRIES
SET DEFINE OFF;
Insert into BANKING_SYSTEM.LEDGER_ENTRIES (ENTRY_ID,TRANSACTION_ID,ACCOUNT_ID,ENTRY_TYPE,AMOUNT,REMARKS,CREATED_AT) values (1,1,1,'CREDIT',5000,'Deposit',to_timestamp('28-06-25 7:59:20.016000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'));
Insert into BANKING_SYSTEM.LEDGER_ENTRIES (ENTRY_ID,TRANSACTION_ID,ACCOUNT_ID,ENTRY_TYPE,AMOUNT,REMARKS,CREATED_AT) values (2,2,2,'CREDIT',5000,'Deposit',to_timestamp('28-06-25 7:59:26.387000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'));
Insert into BANKING_SYSTEM.LEDGER_ENTRIES (ENTRY_ID,TRANSACTION_ID,ACCOUNT_ID,ENTRY_TYPE,AMOUNT,REMARKS,CREATED_AT) values (3,3,3,'CREDIT',5000,'Deposit',to_timestamp('28-06-25 7:59:33.861000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'));
Insert into BANKING_SYSTEM.LEDGER_ENTRIES (ENTRY_ID,TRANSACTION_ID,ACCOUNT_ID,ENTRY_TYPE,AMOUNT,REMARKS,CREATED_AT) values (4,4,4,'CREDIT',5000,'Deposit',to_timestamp('28-06-25 7:59:40.825000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'));
Insert into BANKING_SYSTEM.LEDGER_ENTRIES (ENTRY_ID,TRANSACTION_ID,ACCOUNT_ID,ENTRY_TYPE,AMOUNT,REMARKS,CREATED_AT) values (5,5,5,'CREDIT',5000,'Deposit',to_timestamp('28-06-25 7:59:47.031000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'));
Insert into BANKING_SYSTEM.LEDGER_ENTRIES (ENTRY_ID,TRANSACTION_ID,ACCOUNT_ID,ENTRY_TYPE,AMOUNT,REMARKS,CREATED_AT) values (6,6,3,'DEBIT',1500,'Transfer to Account 1',to_timestamp('28-06-25 7:59:55.339000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'));
Insert into BANKING_SYSTEM.LEDGER_ENTRIES (ENTRY_ID,TRANSACTION_ID,ACCOUNT_ID,ENTRY_TYPE,AMOUNT,REMARKS,CREATED_AT) values (7,6,1,'CREDIT',1500,'Transfer from Account 3',to_timestamp('28-06-25 7:59:55.346000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'));
Insert into BANKING_SYSTEM.LEDGER_ENTRIES (ENTRY_ID,TRANSACTION_ID,ACCOUNT_ID,ENTRY_TYPE,AMOUNT,REMARKS,CREATED_AT) values (8,7,4,'DEBIT',3000,'Transfer to Account 5',to_timestamp('28-06-25 8:00:07.693000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'));
Insert into BANKING_SYSTEM.LEDGER_ENTRIES (ENTRY_ID,TRANSACTION_ID,ACCOUNT_ID,ENTRY_TYPE,AMOUNT,REMARKS,CREATED_AT) values (9,7,5,'CREDIT',3000,'Transfer from Account 4',to_timestamp('28-06-25 8:00:07.696000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'));
Insert into BANKING_SYSTEM.LEDGER_ENTRIES (ENTRY_ID,TRANSACTION_ID,ACCOUNT_ID,ENTRY_TYPE,AMOUNT,REMARKS,CREATED_AT) values (10,8,5,'DEBIT',500,'Transfer to Account 2',to_timestamp('28-06-25 8:00:26.088000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'));
Insert into BANKING_SYSTEM.LEDGER_ENTRIES (ENTRY_ID,TRANSACTION_ID,ACCOUNT_ID,ENTRY_TYPE,AMOUNT,REMARKS,CREATED_AT) values (11,8,2,'CREDIT',500,'Transfer from Account 5',to_timestamp('28-06-25 8:00:26.093000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'));
Insert into BANKING_SYSTEM.LEDGER_ENTRIES (ENTRY_ID,TRANSACTION_ID,ACCOUNT_ID,ENTRY_TYPE,AMOUNT,REMARKS,CREATED_AT) values (12,9,2,'DEBIT',1200,'Transfer to Account 2',to_timestamp('28-06-25 8:00:40.546000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'));
Insert into BANKING_SYSTEM.LEDGER_ENTRIES (ENTRY_ID,TRANSACTION_ID,ACCOUNT_ID,ENTRY_TYPE,AMOUNT,REMARKS,CREATED_AT) values (13,9,1,'CREDIT',1200,'Transfer from Account 5',to_timestamp('28-06-25 8:00:40.550000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'));
Insert into BANKING_SYSTEM.LEDGER_ENTRIES (ENTRY_ID,TRANSACTION_ID,ACCOUNT_ID,ENTRY_TYPE,AMOUNT,REMARKS,CREATED_AT) values (14,10,1,'DEBIT',3500,'Transfer to Account 2',to_timestamp('28-06-25 8:00:47.348000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'));
Insert into BANKING_SYSTEM.LEDGER_ENTRIES (ENTRY_ID,TRANSACTION_ID,ACCOUNT_ID,ENTRY_TYPE,AMOUNT,REMARKS,CREATED_AT) values (15,10,4,'CREDIT',3500,'Transfer from Account 5',to_timestamp('28-06-25 8:00:47.351000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'));
REM INSERTING into BANKING_SYSTEM.TICKETS
SET DEFINE OFF;
REM INSERTING into BANKING_SYSTEM.TRANSACTIONS
SET DEFINE OFF;
Insert into BANKING_SYSTEM.TRANSACTIONS (TRANSACTION_ID,TRANSACTION_TYPE,FROM_ACCOUNT_ID,TO_ACCOUNT_ID,AMOUNT,REMARKS,STATUS,CREATED_AT) values (1,'DEPOSIT',null,1,5000,'Initial deposit','COMPLETED',to_timestamp('28-06-25 7:23:25.031000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'));
Insert into BANKING_SYSTEM.TRANSACTIONS (TRANSACTION_ID,TRANSACTION_TYPE,FROM_ACCOUNT_ID,TO_ACCOUNT_ID,AMOUNT,REMARKS,STATUS,CREATED_AT) values (2,'DEPOSIT',null,2,5000,'Initial deposit','COMPLETED',to_timestamp('28-06-25 7:23:52.264000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'));
Insert into BANKING_SYSTEM.TRANSACTIONS (TRANSACTION_ID,TRANSACTION_TYPE,FROM_ACCOUNT_ID,TO_ACCOUNT_ID,AMOUNT,REMARKS,STATUS,CREATED_AT) values (3,'DEPOSIT',null,3,5000,'Initial deposit','COMPLETED',to_timestamp('28-06-25 7:23:58.049000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'));
Insert into BANKING_SYSTEM.TRANSACTIONS (TRANSACTION_ID,TRANSACTION_TYPE,FROM_ACCOUNT_ID,TO_ACCOUNT_ID,AMOUNT,REMARKS,STATUS,CREATED_AT) values (4,'DEPOSIT',null,4,5000,'Initial deposit','COMPLETED',to_timestamp('28-06-25 7:24:03.181000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'));
Insert into BANKING_SYSTEM.TRANSACTIONS (TRANSACTION_ID,TRANSACTION_TYPE,FROM_ACCOUNT_ID,TO_ACCOUNT_ID,AMOUNT,REMARKS,STATUS,CREATED_AT) values (5,'DEPOSIT',null,5,5000,'Initial deposit','COMPLETED',to_timestamp('28-06-25 7:24:09.016000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'));
Insert into BANKING_SYSTEM.TRANSACTIONS (TRANSACTION_ID,TRANSACTION_TYPE,FROM_ACCOUNT_ID,TO_ACCOUNT_ID,AMOUNT,REMARKS,STATUS,CREATED_AT) values (6,'TRANSFER',3,1,1500,'Refund','COMPLETED',to_timestamp('28-06-25 7:31:49.353000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'));
Insert into BANKING_SYSTEM.TRANSACTIONS (TRANSACTION_ID,TRANSACTION_TYPE,FROM_ACCOUNT_ID,TO_ACCOUNT_ID,AMOUNT,REMARKS,STATUS,CREATED_AT) values (7,'TRANSFER',4,5,3000,'Gift','COMPLETED',to_timestamp('28-06-25 7:31:49.356000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'));
Insert into BANKING_SYSTEM.TRANSACTIONS (TRANSACTION_ID,TRANSACTION_TYPE,FROM_ACCOUNT_ID,TO_ACCOUNT_ID,AMOUNT,REMARKS,STATUS,CREATED_AT) values (8,'TRANSFER',5,2,500,'Loan repayment','COMPLETED',to_timestamp('28-06-25 7:38:28.785000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'));
Insert into BANKING_SYSTEM.TRANSACTIONS (TRANSACTION_ID,TRANSACTION_TYPE,FROM_ACCOUNT_ID,TO_ACCOUNT_ID,AMOUNT,REMARKS,STATUS,CREATED_AT) values (9,'TRANSFER',2,1,1200,'Loan repayment','COMPLETED',to_timestamp('28-06-25 7:56:10.349000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'));
Insert into BANKING_SYSTEM.TRANSACTIONS (TRANSACTION_ID,TRANSACTION_TYPE,FROM_ACCOUNT_ID,TO_ACCOUNT_ID,AMOUNT,REMARKS,STATUS,CREATED_AT) values (10,'TRANSFER',1,4,3500,'Loan repayment','COMPLETED',to_timestamp('28-06-25 7:56:29.322000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'));
--------------------------------------------------------
--  DDL for Trigger TRG_ACCOUNTS_AI
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "BANKING_SYSTEM"."TRG_ACCOUNTS_AI" 
BEFORE INSERT ON accounts
FOR EACH ROW
BEGIN
  IF :NEW.account_id IS NULL THEN
    SELECT seq_accounts.NEXTVAL INTO :NEW.account_id FROM dual;
  END IF;
END;

/
ALTER TRIGGER "BANKING_SYSTEM"."TRG_ACCOUNTS_AI" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_BANKS_AI
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "BANKING_SYSTEM"."TRG_BANKS_AI" 
BEFORE INSERT ON banks
FOR EACH ROW
BEGIN
  IF :NEW.bank_id IS NULL THEN
    SELECT seq_banks.NEXTVAL INTO :NEW.bank_id FROM dual;
  END IF;
END;

/
ALTER TRIGGER "BANKING_SYSTEM"."TRG_BANKS_AI" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_CUSTOMERS_AI
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "BANKING_SYSTEM"."TRG_CUSTOMERS_AI" 
BEFORE INSERT ON customers
FOR EACH ROW
BEGIN
  IF :NEW.customer_id IS NULL THEN
    SELECT seq_customers.NEXTVAL INTO :NEW.customer_id FROM dual;
  END IF;
END;

/
ALTER TRIGGER "BANKING_SYSTEM"."TRG_CUSTOMERS_AI" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_LEDGER_ENTRIES_AI
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "BANKING_SYSTEM"."TRG_LEDGER_ENTRIES_AI" 
BEFORE INSERT ON ledger_entries
FOR EACH ROW
BEGIN
  IF :NEW.entry_id IS NULL THEN
    SELECT seq_ledger_entries.NEXTVAL INTO :NEW.entry_id FROM dual;
  END IF;
END;

/
ALTER TRIGGER "BANKING_SYSTEM"."TRG_LEDGER_ENTRIES_AI" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_TICKETS_AI
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "BANKING_SYSTEM"."TRG_TICKETS_AI" 
BEFORE INSERT ON tickets
FOR EACH ROW
BEGIN
  IF :NEW.ticket_id IS NULL THEN
    SELECT seq_tickets.NEXTVAL INTO :NEW.ticket_id FROM dual;
  END IF;
END;

/
ALTER TRIGGER "BANKING_SYSTEM"."TRG_TICKETS_AI" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_TRANSACTIONS_AI
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "BANKING_SYSTEM"."TRG_TRANSACTIONS_AI" 
BEFORE INSERT ON transactions
FOR EACH ROW
BEGIN
  IF :NEW.transaction_id IS NULL THEN
    SELECT seq_transactions.NEXTVAL INTO :NEW.transaction_id FROM dual;
  END IF;
END;

/
ALTER TRIGGER "BANKING_SYSTEM"."TRG_TRANSACTIONS_AI" ENABLE;
--------------------------------------------------------
--  Constraints for Table ACCOUNTS
--------------------------------------------------------

  ALTER TABLE "BANKING_SYSTEM"."ACCOUNTS" MODIFY ("CUSTOMER_ID" NOT NULL ENABLE);
  ALTER TABLE "BANKING_SYSTEM"."ACCOUNTS" MODIFY ("ACCOUNT_NUMBER" NOT NULL ENABLE);
  ALTER TABLE "BANKING_SYSTEM"."ACCOUNTS" MODIFY ("BANK_ID" NOT NULL ENABLE);
  ALTER TABLE "BANKING_SYSTEM"."ACCOUNTS" MODIFY ("OPENING_BALANCE" NOT NULL ENABLE);
  ALTER TABLE "BANKING_SYSTEM"."ACCOUNTS" MODIFY ("CACHED_BALANCE" NOT NULL ENABLE);
  ALTER TABLE "BANKING_SYSTEM"."ACCOUNTS" ADD CHECK (account_type IN ('SAVINGS', 'CHECKING', 'LIABILITY')) ENABLE;
  ALTER TABLE "BANKING_SYSTEM"."ACCOUNTS" ADD CHECK (status IN ('ACTIVE', 'CLOSED', 'FROZEN')) ENABLE;
  ALTER TABLE "BANKING_SYSTEM"."ACCOUNTS" ADD PRIMARY KEY ("ACCOUNT_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "BANKING_SYSTEM"."ACCOUNTS" ADD UNIQUE ("ACCOUNT_NUMBER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table TICKETS
--------------------------------------------------------

  ALTER TABLE "BANKING_SYSTEM"."TICKETS" MODIFY ("CUSTOMER_ID" NOT NULL ENABLE);
  ALTER TABLE "BANKING_SYSTEM"."TICKETS" ADD CHECK (ticket_type IN (
        'CHEQUE_BOOK_REQUEST',
        'MOBILE_UPDATE',
        'ACCOUNT_CLOSURE',
        'GENERAL_ISSUE'
    )) ENABLE;
  ALTER TABLE "BANKING_SYSTEM"."TICKETS" ADD CHECK (status IN ('PENDING', 'IN_PROGRESS', 'RESOLVED', 'REJECTED')) ENABLE;
  ALTER TABLE "BANKING_SYSTEM"."TICKETS" ADD PRIMARY KEY ("TICKET_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table TRANSACTIONS
--------------------------------------------------------

  ALTER TABLE "BANKING_SYSTEM"."TRANSACTIONS" ADD CHECK (transaction_type IN ('DEPOSIT', 'WITHDRAWAL', 'TRANSFER')) ENABLE;
  ALTER TABLE "BANKING_SYSTEM"."TRANSACTIONS" ADD CHECK (amount > 0) ENABLE;
  ALTER TABLE "BANKING_SYSTEM"."TRANSACTIONS" ADD CHECK (status IN ('PENDING', 'COMPLETED', 'FAILED')) ENABLE;
  ALTER TABLE "BANKING_SYSTEM"."TRANSACTIONS" ADD CHECK (
        (transaction_type = 'TRANSFER' AND from_account_id IS NOT NULL AND to_account_id IS NOT NULL) OR
        (transaction_type = 'DEPOSIT' AND from_account_id IS NULL AND to_account_id IS NOT NULL) OR
        (transaction_type = 'WITHDRAWAL' AND from_account_id IS NOT NULL AND to_account_id IS NULL)
    ) ENABLE;
  ALTER TABLE "BANKING_SYSTEM"."TRANSACTIONS" ADD PRIMARY KEY ("TRANSACTION_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table BANKS
--------------------------------------------------------

  ALTER TABLE "BANKING_SYSTEM"."BANKS" MODIFY ("BANK_NAME" NOT NULL ENABLE);
  ALTER TABLE "BANKING_SYSTEM"."BANKS" MODIFY ("IFSC_CODE" NOT NULL ENABLE);
  ALTER TABLE "BANKING_SYSTEM"."BANKS" ADD PRIMARY KEY ("BANK_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "BANKING_SYSTEM"."BANKS" ADD UNIQUE ("IFSC_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table CUSTOMERS
--------------------------------------------------------

  ALTER TABLE "BANKING_SYSTEM"."CUSTOMERS" MODIFY ("FULL_NAME" NOT NULL ENABLE);
  ALTER TABLE "BANKING_SYSTEM"."CUSTOMERS" MODIFY ("EMAIL" NOT NULL ENABLE);
  ALTER TABLE "BANKING_SYSTEM"."CUSTOMERS" MODIFY ("PASSWORD_HASH" NOT NULL ENABLE);
  ALTER TABLE "BANKING_SYSTEM"."CUSTOMERS" ADD CHECK (status IN ('ACTIVE', 'INACTIVE', 'SUSPENDED')) ENABLE;
  ALTER TABLE "BANKING_SYSTEM"."CUSTOMERS" ADD PRIMARY KEY ("CUSTOMER_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "BANKING_SYSTEM"."CUSTOMERS" ADD UNIQUE ("EMAIL")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table LEDGER_ENTRIES
--------------------------------------------------------

  ALTER TABLE "BANKING_SYSTEM"."LEDGER_ENTRIES" MODIFY ("TRANSACTION_ID" NOT NULL ENABLE);
  ALTER TABLE "BANKING_SYSTEM"."LEDGER_ENTRIES" MODIFY ("ACCOUNT_ID" NOT NULL ENABLE);
  ALTER TABLE "BANKING_SYSTEM"."LEDGER_ENTRIES" ADD CHECK (entry_type IN ('DEBIT', 'CREDIT')) ENABLE;
  ALTER TABLE "BANKING_SYSTEM"."LEDGER_ENTRIES" ADD PRIMARY KEY ("ENTRY_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ACCOUNTS
--------------------------------------------------------

  ALTER TABLE "BANKING_SYSTEM"."ACCOUNTS" ADD FOREIGN KEY ("CUSTOMER_ID")
	  REFERENCES "BANKING_SYSTEM"."CUSTOMERS" ("CUSTOMER_ID") ENABLE;
  ALTER TABLE "BANKING_SYSTEM"."ACCOUNTS" ADD FOREIGN KEY ("BANK_ID")
	  REFERENCES "BANKING_SYSTEM"."BANKS" ("BANK_ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table LEDGER_ENTRIES
--------------------------------------------------------

  ALTER TABLE "BANKING_SYSTEM"."LEDGER_ENTRIES" ADD FOREIGN KEY ("TRANSACTION_ID")
	  REFERENCES "BANKING_SYSTEM"."TRANSACTIONS" ("TRANSACTION_ID") ON DELETE CASCADE ENABLE;
  ALTER TABLE "BANKING_SYSTEM"."LEDGER_ENTRIES" ADD FOREIGN KEY ("ACCOUNT_ID")
	  REFERENCES "BANKING_SYSTEM"."ACCOUNTS" ("ACCOUNT_ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table TICKETS
--------------------------------------------------------

  ALTER TABLE "BANKING_SYSTEM"."TICKETS" ADD FOREIGN KEY ("CUSTOMER_ID")
	  REFERENCES "BANKING_SYSTEM"."CUSTOMERS" ("CUSTOMER_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table TRANSACTIONS
--------------------------------------------------------

  ALTER TABLE "BANKING_SYSTEM"."TRANSACTIONS" ADD FOREIGN KEY ("FROM_ACCOUNT_ID")
	  REFERENCES "BANKING_SYSTEM"."ACCOUNTS" ("ACCOUNT_ID") ENABLE;
  ALTER TABLE "BANKING_SYSTEM"."TRANSACTIONS" ADD FOREIGN KEY ("TO_ACCOUNT_ID")
	  REFERENCES "BANKING_SYSTEM"."ACCOUNTS" ("ACCOUNT_ID") ENABLE;
